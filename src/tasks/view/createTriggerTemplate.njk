{%for table in schema.tables%}
{%if table.isHistoried%}
import { h{{table.name}} } from '{{historyPath+table.pathToModel}}';
{% endif %}
{% endfor %}
import {createConnection, ConnectionOptions} from 'typeorm';


export async function create{{data.name}}Triggers{{schema.namespace.toLowerCase()}}() {
    const pgp = require('pg-promise')({});
    await pgp.end();
    const connectionString = 'postgres://' + process.env.{{data.dbusername}} + ':' +
    process.env.{{data.dbpassword}} + '@' + process.env.{{data.dbhost}} + ':' + process.env.{{data.dbport}} + '/' + process.env.{{data.dbdatabase}};
    const db = pgp(connectionString);
    let queryproc;
    let lowerStringName;
    let lowewrStringSchema;
{%for table in schema.tables%}
{% if table.isHistoried %}
    lowerStringName = '{{table.name}}'.toLowerCase();
    lowewrStringSchema = '{{schema.namespace}}'.toLowerCase();
    queryproc = 'create trigger add_to_' + lowewrStringSchema + '_h_' + lowerStringName + ' after insert or delete or update on "' +
    lowewrStringSchema + '"."' + lowerStringName +
    '" for each row execute procedure ' + lowewrStringSchema +
    '.add_to_history_' + lowewrStringSchema + '_' + lowerStringName + '();';
    await db.none(queryproc);
{%endif%}
{%endfor%}
    pgp.end();
}
